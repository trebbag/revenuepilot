# Copy this file to .env or run `npm run setup-env`
# and provide the required values.

OPENAI_API_KEY=
VITE_API_URL=http://localhost:8000
BACKEND_URL=http://localhost:8000
# Database configuration for the FastAPI backend.
# Leave DATABASE_URL empty to use the SQLite DSN below. Provide
# POSTGRES_* variables to build a PostgreSQL DSN automatically or set
# DATABASE_URL explicitly to override everything.
SQLITE_DSN=sqlite+aiosqlite:///./revenuepilot.db
DATABASE_URL=
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=revenuepilot
POSTGRES_USER=revenuepilot
POSTGRES_PASSWORD=
PGSSLMODE=prefer
# Optional CA bundle (e.g., AWS RDS combined bundle path)
PGSSLROOTCERT=
PGCONNECT_TIMEOUT=10
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=10
STATEMENT_TIMEOUT_MS=30000
DEID_ENGINE=regex
DEID_HASH_TOKENS=true
ICON_PNG_URL=
ICON_ICO_URL=
ICON_ICNS_URL=
# Auto-update feed
# URL where the app checks for updates
UPDATE_SERVER_URL=

# Public health API endpoints (override if necessary)
VACCINATION_API_URL=https://public-health.example.com/vaccinations
SCREENING_API_URL=https://public-health.example.com/screenings

# Code signing certificates
# WIN_CSC_LINK/WIN_CSC_KEY_PASSWORD point to a Windows .p12 bundle and its
# password. CSC_LINK/CSC_KEY_PASSWORD are the equivalent for macOS. Provide
# local paths or HTTPS URLs to the signing certificates. For CI you can
# generate temporary self-signed certs with:
#   openssl req -x509 -nodes -newkey rsa:2048 -keyout key.pem -out cert.pem -days 1 -subj "/CN=test"
#   openssl pkcs12 -export -out cert.p12 -inkey key.pem -in cert.pem -passout pass:password
WIN_CSC_LINK=
WIN_CSC_KEY_PASSWORD=
CSC_LINK=
CSC_KEY_PASSWORD=
